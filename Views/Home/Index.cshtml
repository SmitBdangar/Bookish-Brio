@model IEnumerable<MovieNest.Models.Movie>
@{
    ViewData["Title"] = "Home";
}

<div class="d-flex justify-content-between mb-3 align-items-center">
    <h2 class="h4 mb-0">@ViewBag.Message</h2>
    <div>
        <select id="genreFilter" class="form-select form-select-sm">
            <option value="">All genres</option>
            <option>Action</option>
            <option>Sci-Fi</option>
            <option>Animation</option>
            <option>Drama</option>
        </select>
    </div>
</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-info">No movies found.</div>
}
else
{
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
        @foreach (var movie in Model)
        {
            <div class="col">
                @await Html.PartialAsync("_MovieCard", movie)
            </div>
        }
    </div>

    <!-- simple pagination placeholder -->
    <nav class="mt-4" aria-label="Page navigation">
      <ul class="pagination justify-content-center">
        <li class="page-item disabled"><a class="page-link">Previous</a></li>
        <li class="page-item active"><a class="page-link">1</a></li>
        <li class="page-item"><a class="page-link">2</a></li>
        <li class="page-item"><a class="page-link">Next</a></li>
      </ul>
    </nav>
}
<script>
    // client-side genre filter (simple)
    $('#genreFilter').on('change', function(){
        var g = $(this).val().toLowerCase();
        $('.movie-card').each(function(){
            var genre = $(this).find('.text-muted').text().toLowerCase();
            $(this).closest('.col').toggle(g === '' || genre.indexOf(g) !== -1);
        });
    });
</script>
